import java.util.Scanner;
// Node class
class Node {
    int key;
    Node left, right;

    public Node(int item) {
        key = item;
        left = right = null;
    }
}
// BST class
class BST {
    Node root;
    BST() {
        root = null;
    }
    // Insert a key
    void insert(int key) {
        root = insertRec(root, key);
    }
    Node insertRec(Node root, int key) {
        if (root == null) {
            root = new Node(key);
            return root;
        }
        if (key < root.key)
            root.left = insertRec(root.left, key);
        else if (key > root.key)
            root.right = insertRec(root.right, key);
        return root;
    }
    // Inorder traversal
    void inorder() {
        inorderRec(root);
        System.out.println();
    }
    void inorderRec(Node root) {
        if (root != null) {
            inorderRec(root.left);
            System.out.print(root.key + " ");
            inorderRec(root.right);
        }
    }
    // Search a key
    boolean search(int key) {
        return searchRec(root, key);
    }
    boolean searchRec(Node root, int key) {
        if (root == null)
            return false;
        if (root.key == key)
            return true;
        return key < root.key ? searchRec(root.left, key) : searchRec(root.right, key);
    }
}
// Main class with user input
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        BST tree = new BST();
        System.out.print("Enter number of elements to insert: ");
        int n = sc.nextInt();
        System.out.println("Enter " + n + " integer values:");
        for (int i = 0; i < n; i++) {
            int val = sc.nextInt();
            tree.insert(val);
        }
        System.out.println("Inorder traversal of BST (sorted):");
        tree.inorder();
        System.out.print("Enter value to search in BST: ");
        int key = sc.nextInt();
        if (tree.search(key)) {
            System.out.println(key + " found in BST.");
        } else {
            System.out.println(key + " not found in BST.");
        }
        sc.close();
    }
}
